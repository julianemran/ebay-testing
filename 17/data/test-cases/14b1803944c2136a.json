{
  "uid" : "14b1803944c2136a",
  "name" : "test_signup[attrs0]",
  "fullName" : "tests.signup_page.test_signup_page.TestSignupPage#test_signup",
  "historyId" : "92e7226d0e17fb3961b4f5fe4927e2c0",
  "time" : {
    "start" : 1737555026572,
    "stop" : 1737555040282,
    "duration" : 13710
  },
  "description" : "This test attempts to signup with valid attributes.",
  "descriptionHtml" : "<p>This test attempts to signup with valid attributes.</p>\n",
  "status" : "broken",
  "statusMessage" : "Exception: Message: element click intercepted: Element <button name=\"EMAIL_REG_FORM_SUBMIT\" id=\"EMAIL_REG_FORM_SUBMIT\" class=\"btn btn--primary btn--large btn--fluid\" type=\"submit\" aria-describedby=\"legalTextId\" data-click-tracking-data=\"{&quot;linkId&quot;:47252,&quot;pageId&quot;:&quot;4381686&quot;,&quot;type&quot;:&quot;_plsr&quot;,&quot;payload&quot;:{&quot;RegModuleName&quot;:&quot;BUYER_REG_PERSONAL_EMAIL_DWEB&quot;,&quot;bs&quot;:&quot;0&quot;,&quot;ul&quot;:&quot;en-US&quot;,&quot;uc&quot;:1}}\" data-viewport=\"{&quot;trackableId&quot;:&quot;01JJ75HP7XXTF55F2BQDJZW8N4&quot;}\">...</button> is not clickable at point (1308, 494). Other element would receive the click: <iframe id=\"captchaFrame\" src=\"/captcharouter_challenge?ap=1&amp;iim=AMjAuOx&amp;iia=VATguMzPh&amp;iiz=aujcuMjMxMGx&amp;ru=https%3A%2F%2Fsignup.ebay.com%2Fajax%2Fvalidatefield&amp;iid=4ae1b1e6-6e48-492c-be46-36f4c311d7c8\" style=\"position: fixed; width: 100%; height: 100%; top: 0px; left: 0px; margin: 0px; padding: 0px; border: 0px; background-color: white; z-index: 99999;\"></iframe>\n  (Session info: chrome=132.0.6834.0)\nStacktrace:\n#0 0x55d630add7ca <unknown>\n#1 0x55d6305d52f0 <unknown>\n#2 0x55d63062bcfe <unknown>\n#3 0x55d630629c2c <unknown>\n#4 0x55d630627342 <unknown>\n#5 0x55d63062655c <unknown>\n#6 0x55d6306191ed <unknown>\n#7 0x55d6306499b2 <unknown>\n#8 0x55d630618b78 <unknown>\n#9 0x55d630649b7e <unknown>\n#10 0x55d6306683b3 <unknown>\n#11 0x55d630649753 <unknown>\n#12 0x55d630616baa <unknown>\n#13 0x55d630617dfe <unknown>\n#14 0x55d630aa838b <unknown>\n#15 0x55d630aac307 <unknown>\n#16 0x55d630a94e7c <unknown>\n#17 0x55d630aacec7 <unknown>\n#18 0x55d630a7924f <unknown>\n#19 0x55d630acc2f8 <unknown>\n#20 0x55d630acc4c0 <unknown>\n#21 0x55d630adc646 <unknown>\n#22 0x7fc49b89ca94 <unknown>\n#23 0x7fc49b929c3c <unknown>\n\nFailed to click on EMAIL_REG_FORM_SUBMIT",
  "statusTrace" : "self = <src.pages.signup_page.SignupPage object at 0x7f8cbec65ee0>, how = 'id'\nwhat = 'EMAIL_REG_FORM_SUBMIT', element_appeared = None, timeout = 10\nis_to_scroll = True\n\n    def press_the_button(self, how, what, element_appeared=None, timeout=10, is_to_scroll=True):\n        \"\"\"how: which type of selectors is used, ex., By.CSS_SELECTOR\n           what: elements selector itself that should be filled, ex., [id='username']\n           element_appeared: page element that appears after the pressing the button; consists of 2 params: how, what\n        \"\"\"\n        try:\n            button = self.find_element(how, what, timeout=timeout)\n            WebDriverWait(self.browser, timeout=timeout).until_not(EC.staleness_of(button))\n            actions = ActionChains(self.browser)\n        except TimeoutException:\n            raise TimeoutException(f\"element {what} didn't appear in {timeout} secs\")\n        if is_to_scroll:\n            actions.move_to_element(button).perform()\n        try:\n>           button.click()\n\nsrc/pages/base_page.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8cbec67dd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55d630adc646 \\\\u003Cunknown>\\\\n#22 0x7fc49b89ca94 \\\\u003Cunknown>\\\\n#23 0x7fc49b929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button name=\"EMAIL_REG_FORM_SUBMIT\" id=\"EMAIL_REG_FORM_SUBMIT\" class=\"btn btn--primary btn--large btn--fluid\" type=\"submit\" aria-describedby=\"legalTextId\" data-click-tracking-data=\"{&quot;linkId&quot;:47252,&quot;pageId&quot;:&quot;4381686&quot;,&quot;type&quot;:&quot;_plsr&quot;,&quot;payload&quot;:{&quot;RegModuleName&quot;:&quot;BUYER_REG_PERSONAL_EMAIL_DWEB&quot;,&quot;bs&quot;:&quot;0&quot;,&quot;ul&quot;:&quot;en-US&quot;,&quot;uc&quot;:1}}\" data-viewport=\"{&quot;trackableId&quot;:&quot;01JJ75HP7XXTF55F2BQDJZW8N4&quot;}\">...</button> is not clickable at point (1308, 494). Other element would receive the click: <iframe id=\"captchaFrame\" src=\"/captcharouter_challenge?ap=1&amp;iim=AMjAuOx&amp;iia=VATguMzPh&amp;iiz=aujcuMjMxMGx&amp;ru=https%3A%2F%2Fsignup.ebay.com%2Fajax%2Fvalidatefield&amp;iid=4ae1b1e6-6e48-492c-be46-36f4c311d7c8\" style=\"position: fixed; width: 100%; height: 100%; top: 0px; left: 0px; margin: 0px; padding: 0px; border: 0px; background-color: white; z-index: 99999;\"></iframe>\nE         (Session info: chrome=132.0.6834.0)\nE       Stacktrace:\nE       #0 0x55d630add7ca <unknown>\nE       #1 0x55d6305d52f0 <unknown>\nE       #2 0x55d63062bcfe <unknown>\nE       #3 0x55d630629c2c <unknown>\nE       #4 0x55d630627342 <unknown>\nE       #5 0x55d63062655c <unknown>\nE       #6 0x55d6306191ed <unknown>\nE       #7 0x55d6306499b2 <unknown>\nE       #8 0x55d630618b78 <unknown>\nE       #9 0x55d630649b7e <unknown>\nE       #10 0x55d6306683b3 <unknown>\nE       #11 0x55d630649753 <unknown>\nE       #12 0x55d630616baa <unknown>\nE       #13 0x55d630617dfe <unknown>\nE       #14 0x55d630aa838b <unknown>\nE       #15 0x55d630aac307 <unknown>\nE       #16 0x55d630a94e7c <unknown>\nE       #17 0x55d630aacec7 <unknown>\nE       #18 0x55d630a7924f <unknown>\nE       #19 0x55d630acc2f8 <unknown>\nE       #20 0x55d630acc4c0 <unknown>\nE       #21 0x55d630adc646 <unknown>\nE       #22 0x7fc49b89ca94 <unknown>\nE       #23 0x7fc49b929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.signup_page.test_signup_page.TestSignupPage object at 0x7f8cbebce1e0>\npage = <src.pages.signup_page.SignupPage object at 0x7f8cbec65ee0>\nattrs = {'email': 'mbdskvk124@gmail.com', 'first_name': 'phrtcw', 'last_name': 'hbfltp', 'password': '#EbayTesting12'}\n\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.parametrize('attrs', [\n        {\n             \"first_name\": conftest.generate_random_text(6),\n             \"last_name\": conftest.generate_random_text(6),\n             \"email\": f\"{conftest.generate_random_text(7)}124@gmail.com\",\n             \"password\": \"#EbayTesting12\"\n        }\n    ])\n    def test_signup(self, page, attrs):\n        allure.dynamic.description(f\"This test attempts to signup with valid attributes.\")\n        page.fill_signup_page(attributes=attrs)\n>       page.press_the_button(*SignupPageLocators.CREATE_ACCOUNT_BTN)\n\ntests/signup_page/test_signup_page.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.pages.signup_page.SignupPage object at 0x7f8cbec65ee0>, how = 'id'\nwhat = 'EMAIL_REG_FORM_SUBMIT', element_appeared = None, timeout = 10\nis_to_scroll = True\n\n    def press_the_button(self, how, what, element_appeared=None, timeout=10, is_to_scroll=True):\n        \"\"\"how: which type of selectors is used, ex., By.CSS_SELECTOR\n           what: elements selector itself that should be filled, ex., [id='username']\n           element_appeared: page element that appears after the pressing the button; consists of 2 params: how, what\n        \"\"\"\n        try:\n            button = self.find_element(how, what, timeout=timeout)\n            WebDriverWait(self.browser, timeout=timeout).until_not(EC.staleness_of(button))\n            actions = ActionChains(self.browser)\n        except TimeoutException:\n            raise TimeoutException(f\"element {what} didn't appear in {timeout} secs\")\n        if is_to_scroll:\n            actions.move_to_element(button).perform()\n        try:\n            button.click()\n        except Exception as e:\n>           raise Exception(f\"{e}\\nFailed to click on {what}\")\nE           Exception: Message: element click intercepted: Element <button name=\"EMAIL_REG_FORM_SUBMIT\" id=\"EMAIL_REG_FORM_SUBMIT\" class=\"btn btn--primary btn--large btn--fluid\" type=\"submit\" aria-describedby=\"legalTextId\" data-click-tracking-data=\"{&quot;linkId&quot;:47252,&quot;pageId&quot;:&quot;4381686&quot;,&quot;type&quot;:&quot;_plsr&quot;,&quot;payload&quot;:{&quot;RegModuleName&quot;:&quot;BUYER_REG_PERSONAL_EMAIL_DWEB&quot;,&quot;bs&quot;:&quot;0&quot;,&quot;ul&quot;:&quot;en-US&quot;,&quot;uc&quot;:1}}\" data-viewport=\"{&quot;trackableId&quot;:&quot;01JJ75HP7XXTF55F2BQDJZW8N4&quot;}\">...</button> is not clickable at point (1308, 494). Other element would receive the click: <iframe id=\"captchaFrame\" src=\"/captcharouter_challenge?ap=1&amp;iim=AMjAuOx&amp;iia=VATguMzPh&amp;iiz=aujcuMjMxMGx&amp;ru=https%3A%2F%2Fsignup.ebay.com%2Fajax%2Fvalidatefield&amp;iid=4ae1b1e6-6e48-492c-be46-36f4c311d7c8\" style=\"position: fixed; width: 100%; height: 100%; top: 0px; left: 0px; margin: 0px; padding: 0px; border: 0px; background-color: white; z-index: 99999;\"></iframe>\nE             (Session info: chrome=132.0.6834.0)\nE           Stacktrace:\nE           #0 0x55d630add7ca <unknown>\nE           #1 0x55d6305d52f0 <unknown>\nE           #2 0x55d63062bcfe <unknown>\nE           #3 0x55d630629c2c <unknown>\nE           #4 0x55d630627342 <unknown>\nE           #5 0x55d63062655c <unknown>\nE           #6 0x55d6306191ed <unknown>\nE           #7 0x55d6306499b2 <unknown>\nE           #8 0x55d630618b78 <unknown>\nE           #9 0x55d630649b7e <unknown>\nE           #10 0x55d6306683b3 <unknown>\nE           #11 0x55d630649753 <unknown>\nE           #12 0x55d630616baa <unknown>\nE           #13 0x55d630617dfe <unknown>\nE           #14 0x55d630aa838b <unknown>\nE           #15 0x55d630aac307 <unknown>\nE           #16 0x55d630a94e7c <unknown>\nE           #17 0x55d630aacec7 <unknown>\nE           #18 0x55d630a7924f <unknown>\nE           #19 0x55d630acc2f8 <unknown>\nE           #20 0x55d630acc4c0 <unknown>\nE           #21 0x55d630adc646 <unknown>\nE           #22 0x7fc49b89ca94 <unknown>\nE           #23 0x7fc49b929c3c <unknown>\nE           \nE           Failed to click on EMAIL_REG_FORM_SUBMIT\n\nsrc/pages/base_page.py:62: Exception",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "page",
    "time" : {
      "start" : 1737555026567,
      "stop" : 1737555026571,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1737554973488,
      "stop" : 1737554974148,
      "duration" : 660
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "log_report",
    "time" : {
      "start" : 1737555026571,
      "stop" : 1737555026571,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1737554824477,
      "stop" : 1737554824477,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1737555040416,
      "stop" : 1737555040561,
      "duration" : 145
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "log_report::0",
    "time" : {
      "start" : 1737555040312,
      "stop" : 1737555040415,
      "duration" : 103
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "21500322ed9701e4",
      "name" : "test_signup_attrs0__screenshot.png",
      "source" : "21500322ed9701e4.png",
      "type" : "image/png",
      "size" : 66084
    }, {
      "uid" : "f954c7c208a5db12",
      "name" : "test_signup_attrs0__Console",
      "source" : "f954c7c208a5db12.txt",
      "type" : "text/plain",
      "size" : 1715
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "parentSuite",
    "value" : "tests.signup_page"
  }, {
    "name" : "suite",
    "value" : "test_signup_page"
  }, {
    "name" : "subSuite",
    "value" : "TestSignupPage"
  }, {
    "name" : "host",
    "value" : "fv-az1368-486"
  }, {
    "name" : "thread",
    "value" : "2633-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.signup_page.test_signup_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "attrs",
    "value" : "{'first_name': 'phrtcw', 'last_name': 'hbfltp', 'email': 'mbdskvk124@gmail.com', 'password': '#EbayTesting12'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "minor",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "14b1803944c2136a.json",
  "parameterValues" : [ "{'first_name': 'phrtcw', 'last_name': 'hbfltp', 'email': 'mbdskvk124@gmail.com', 'password': '#EbayTesting12'}" ]
}